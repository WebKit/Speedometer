.toggle-outer {
    display: flex;
    justify-content: space-between;
    padding: var(--content-spacing-small);
    border-radius: var(--border-radius-medium);
    border: 2px solid var(--color-utils-gray-light);
    color: var(--color-utils-black);
    width: 100%;
    height: 40px;
    align-items: center;
}

.toggle-description {
    margin-right: 16px;
}

.toggle-container {
    display: flex;
    justify-content: center;
    flex-direction: column;
    width: 42px;
    height: 22px;
    position: relative;
}

.toggle-container .label {
    width: 42px;
    height: 16px;
    display: flex;
    background-color: var(--color-toggle-fill-label);
    border-radius: 22px;
    cursor: pointer;

    /* for high-contrast */
    border-width: var(--width-modal-border);
    border-color: var(--color-modal-border);
    border-style: solid;
}

.toggle-container .switch {
    position: absolute;
    left: 0;
    top: 3px;
    background-color: var(--color-toggle-fill-checked);
    border-radius: 22px;
    transition: var(--transition-default);
    width: 45%;
    height: 16px;
    pointer-events: none;

    /* for high-contrast */
    border-width: var(--width-modal-border);
    border-color: var(--color-modal-border);
    border-style: solid;
}

.toggle-container .switch::before {
    position: absolute;
    content: "";
    height: 22px;
    width: 22px;
    top: 50%;
    left: calc(var(--width-modal-border) * -1);
    transform: translateY(-11px);
    background-color: var(--color-toggle-switch);
    border-radius: var(--border-radius-50);
    transition: var(--transition-default);
}

.toggle-container .label input[type="checkbox"] {
    width: 44px;
    height: 16px;
    z-index: -1;
    position: absolute;
    left: -6px;
    top: 0;
}

.toggle-container .label input[type="checkbox"]:checked + .switch::before {
    transform: translate(20px, -11px);
}

.toggle-container .label input[type="checkbox"]:checked + .switch {
    width: 100%;
}

/* High Contrast / Forced-Colors:
  Apply forced-colors class to parent element
  to manually envoke force-colors on child elements.
*/
@media (forced-colors: active) {
    .toggle-container {
        forced-color-adjust: none;
    }
}
